/* Generated By:JavaCC: Do not edit this line. GepardParserConstants.java */
package parser;


/**
 * Token literal values and constants.
 * Generated by org.javacc.parser.OtherFilesGen#start()
 */
public interface GepardParserConstants {

  /** End of File. */
  int EOF = 0;
  /** RegularExpression Id. */
  int CREATE = 1;
  /** RegularExpression Id. */
  int DROP = 2;
  /** RegularExpression Id. */
  int TABLE = 3;
  /** RegularExpression Id. */
  int INTEGER = 4;
  /** RegularExpression Id. */
  int VARCHAR = 5;
  /** RegularExpression Id. */
  int CASCADE = 6;
  /** RegularExpression Id. */
  int CONSTRAINT = 7;
  /** RegularExpression Id. */
  int CONSTRAINTS = 8;
  /** RegularExpression Id. */
  int PRIMARYKEY = 9;
  /** RegularExpression Id. */
  int UNIQUE = 10;
  /** RegularExpression Id. */
  int HORIZONTAL = 11;
  /** RegularExpression Id. */
  int CHECK = 12;
  /** RegularExpression Id. */
  int IS = 13;
  /** RegularExpression Id. */
  int NOT = 14;
  /** RegularExpression Id. */
  int IN = 15;
  /** RegularExpression Id. */
  int FOREIGNKEY = 16;
  /** RegularExpression Id. */
  int REFERENCES = 17;
  /** RegularExpression Id. */
  int BETWEEN = 18;
  /** RegularExpression Id. */
  int DELETE = 19;
  /** RegularExpression Id. */
  int FROM = 20;
  /** RegularExpression Id. */
  int WHERE = 21;
  /** RegularExpression Id. */
  int INSERT = 22;
  /** RegularExpression Id. */
  int INTO = 23;
  /** RegularExpression Id. */
  int VALUES = 24;
  /** RegularExpression Id. */
  int LPAREN = 25;
  /** RegularExpression Id. */
  int RPAREN = 26;
  /** RegularExpression Id. */
  int SEMICOLON = 27;
  /** RegularExpression Id. */
  int COMMA = 28;
  /** RegularExpression Id. */
  int SINGLEQUOTE = 29;
  /** RegularExpression Id. */
  int OPERATOR = 30;
  /** RegularExpression Id. */
  int UNDERSCORE = 31;
  /** RegularExpression Id. */
  int MINUS = 32;
  /** RegularExpression Id. */
  int NULL = 33;
  /** RegularExpression Id. */
  int DOT = 34;
  /** RegularExpression Id. */
  int AST = 35;
  /** RegularExpression Id. */
  int AND = 36;
  /** RegularExpression Id. */
  int OR = 37;
  /** RegularExpression Id. */
  int SELECT = 38;
  /** RegularExpression Id. */
  int COUNT = 39;
  /** RegularExpression Id. */
  int DIGIT = 40;
  /** RegularExpression Id. */
  int LETTER = 41;

  /** Lexical state. */
  int DEFAULT = 0;

  /** Literal token values. */
  String[] tokenImage = {
    "<EOF>",
    "\"CREATE \"",
    "\"DROP \"",
    "\"TABLE \"",
    "\"INTEGER\"",
    "\"VARCHAR\"",
    "\"CASCADE \"",
    "<CONSTRAINT>",
    "\"CONSTRAINTS\"",
    "<PRIMARYKEY>",
    "<UNIQUE>",
    "<HORIZONTAL>",
    "\"CHECK \"",
    "\" IS \"",
    "\"NOT \"",
    "\"IN \"",
    "\"FOREIGN KEY \"",
    "\"REFERENCES \"",
    "\"BETWEEN \"",
    "\"DELETE \"",
    "\"FROM \"",
    "\"WHERE \"",
    "\"INSERT \"",
    "\"INTO \"",
    "<VALUES>",
    "<LPAREN>",
    "<RPAREN>",
    "\";\"",
    "<COMMA>",
    "\"\\\'\"",
    "<OPERATOR>",
    "\"_\"",
    "\"-\"",
    "\"NULL\"",
    "\".\"",
    "\"*\"",
    "\" AND \"",
    "\" OR \"",
    "\"SELECT \"",
    "\" COUNT\"",
    "<DIGIT>",
    "<LETTER>",
    "\" \"",
  };

}
